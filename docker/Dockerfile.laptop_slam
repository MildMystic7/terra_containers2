ARG BASE_IMAGE=ros:humble-perception

# The following steps are based on the offical multi-stage build: https://github.com/IntelRealSense/librealsense/blob/master/scripts/Docker/Dockerfile
#################################
#   Librealsense Builder Stage  #
#################################
FROM $BASE_IMAGE as ros2_basic

SHELL ["/bin/bash", "-c"]

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
 && apt-get install -qq -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    libssl-dev \
    libusb-1.0-0-dev \
    pkg-config \
    libgtk-3-dev \
    libglfw3-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \  
    python3-pip \  
    curl \
    python3 \
    python3-dev \
    ca-certificates \
    ros-${ROS_DISTRO}-rviz2 \
 && source /opt/ros/${ROS_DISTRO}/setup.bash \
 && rm -rf /var/lib/apt/lists/*

RUN apt-get update \
&& apt-get upgrade -y \
&& apt-get install ros-humble-realsense2* -y

# Install Yolo v8, etc dependencies. Add requirements.txt or poetry
# RUN pip3 install ultralytics xmltodict

# OVINS requirements
RUN apt-get install -y libeigen3-dev nano git

# Ceres solver install and setup
RUN sudo apt-get install -y cmake libgoogle-glog-dev libgflags-dev libatlas-base-dev libeigen3-dev libsuitesparse-dev libceres-dev

RUN apt-get update && apt-get install -y python3-dev python3-matplotlib python3-numpy python3-psutil python3-tk

RUN apt-get update && apt-get install -y ssh build-essential gcc g++ \
    gdb clang cmake rsync tar python3 && apt-get clean

# OpenVins stuff
RUN ( \
    echo 'LogLevel DEBUG2'; \
    echo 'PermitRootLogin yes'; \
    echo 'PasswordAuthentication yes'; \
    echo 'Subsystem sftp /usr/lib/openssh/sftp-server'; \
  ) > /etc/ssh/sshd_config_test_clion \
  && mkdir /run/sshd
RUN useradd -m user && yes password | passwd user
RUN usermod -s /bin/bash user
CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_config_test_clion"]

RUN git clone --recursive https://github.com/stevenlovegrove/Pangolin.git \
  && cd Pangolin \
  && cmake -B build \
  && cmake --build build --target install

RUN git clone https://github.com/zang09/ORB-SLAM3-STEREO-FIXED.git ORB_SLAM3 \
    && cd ORB_SLAM3 \
    && cd .. \
    && cd ORB_SLAM3 \
    && ./build.sh
    

RUN cd ORB_SLAM3/Thirdparty/Sophus/build \
    && sudo make install

# Install python dependencies. TODO: use poetry
ENV WS_DIR="/ros2_ws"

WORKDIR ${WS_DIR}

# COPY config_rviz ./config_rviz
